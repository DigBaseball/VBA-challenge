Sub StockAnalyze()' For every tab in this sheetFor Each ws In Worksheets' Create a Variable to Hold File Name        Dim WorksheetName As String        ' Grab the WorksheetName        WorksheetName = ws.Name' Create a looping variableDim i As Long' Find the last rowLast_row = ws.Cells(Rows.Count, 1).End(xlUp).Row' Create a variable for storing the ticker nameDim Ticker As String' Create variables for the opening and closing stock priceDim Price_opening As DoubleDim Price_closing As Double' Create a variable for storing the yearly price changeDim ypc As Double' Create a variable for storing the yearly price change percentDim ypc_pc As Double' Create a variable for the daily stock volumeDim Daily_stock_volume As Single' Create and initialize variable for the running stock volume (note: when I give this the type of Single, it messes everything up (!?!?!))Running_stock_volume = 0' Create and initialize a variable for storing the summary table rowDim Summary_table_row As IntegerSummary_table_row = 2' Create and initialize a variable for storing the greatest increase in yearly price change percentageDim Max_ypc_pc As DoubleMax_ypc_pc = 0' Create and initialize a variable for storing the greatest decrease in yearly price change percentageDim Min_ypc_pc As DoubleMin_ypc_pc = 0' Create and initialize a variable for storing the max total stock volumeDim Max_total_stock_volume As SingleMax_total_stock_volume = 0' Populate the headers of the two summary tables (regular and bonus)ws.Cells(1, 9).Value = "Ticker"ws.Cells(1, 10).Value = "Yearly Change"ws.Cells(1, 11).Value = "Percent Change"ws.Cells(1, 12).Value = "Stock Volume"ws.Cells(1, 15).Value = "Ticker"ws.Cells(1, 16).Value = "Value"ws.Cells(2, 14).Value = "Greatest % Increase"ws.Cells(3, 14).Value = "Greatest % Decrease"ws.Cells(4, 14).Value = "Greatest Total Volume"' __~_~_~_~_~_ LOOP TO ANALYZE ALL STOCKS IN THIS SHEET _~_~_~_~_~_' Look through every row in this tab that has dataFor i = 2 To Last_row    ' Capture the daily stock value and add it to the running total    Daily_stock_value = ws.Cells(i, 7).Value    Running_stock_volume = Running_stock_volume + Daily_stock_value    ' If this row has a different ticker value than the previous row, capture the opening price        If ws.Cells(i, 1).Value <> ws.Cells(i - 1, 1).Value Then            Price_opening = ws.Cells(i, 3).Value            End If            ' If this row has a different ticker value that the following row, do a bunch of things!    If ws.Cells(i, 1).Value <> ws.Cells(i + 1, 1) Then                ' ---- SUMMARY TABLE  (columns I through L) ----                ' copy the current row's ticker value to the summary table        ws.Cells(Summary_table_row, 9).Value = ws.Cells(i, 1).Value                ' capture the current row's closing price variable        Price_closing = ws.Cells(i, 6).Value                ' calculate the yearly price change and print it to the summary table        ypc = Price_closing - Price_opening        ws.Cells(Summary_table_row, 10).Value = ypc               ' format the yearly price change cell's color to highlight either positive change in green or negative change in red         If ypc > 0 Then            ws.Cells(Summary_table_row, 10).Interior.ColorIndex = 4         ElseIf ypc < 0 Then            ws.Cells(Summary_table_row, 10).Interior.ColorIndex = 3         End If                ' if opening price is nonzero, calculate/format/print the yearly price change as a percentage (avoids "divide by zero" errors)        If Price_opening <> 0 Then                ypc_pc = (ypc) / Price_opening                ws.Cells(Summary_table_row, 11).Value = FormatPercent(ypc_pc)        End If        ' print the running stock volume to the summary table        ws.Cells(Summary_table_row, 12).Value = Running_stock_volume                        ' ---- BONUS SUMMARY TABLE (columns N through P) ----                ' if yearly price change percentage is the lowest so far, store it in the bonus summary table        If ypc_pc < Min_ypc_pc Then            ws.Cells(3, 15).Value = ws.Cells(i, 1).Value            Min_ypc_pc = ypc_pc            ws.Cells(3, 16).Value = FormatPercent(Min_ypc_pc)        End If                ' if yearly price change percentage is the highest so far, store it in the bonus summary table        If ypc_pc > Max_ypc_pc Then            ws.Cells(2, 15).Value = ws.Cells(i, 1).Value            Max_ypc_pc = ypc_pc            ws.Cells(2, 16).Value = FormatPercent(Max_ypc_pc)        End If                ' if running stock volume is the highest so far, store it in the bonus summary table        If Running_stock_volume > Max_total_stock_volume Then            ws.Cells(4, 15).Value = ws.Cells(i, 1).Value            Max_total_stock_volume = Running_stock_volume            ws.Cells(4, 16).Value = Running_stock_volume        End If            ' Reset a few variables to zero for the next ticker        Price_closing = 0        Running_stock_volume = 0        ypc_pc = 0                ' Increment summary table row        Summary_table_row = Summary_table_row + 1          End If    Next i' Auto-Fit columns widths of the summary tablesWorksheets(WorksheetName).Columns("I:L").AutoFitWorksheets(WorksheetName).Columns("N:P").AutoFitNext wsEnd Sub